@page "/CreatePost"
@using HttpClients.ClientInterfaces
@using global::Shared.DTOs
@inject IPostService postService;

<AuthorizeView>
    <Authorized>
        <div class="card-beauty">
            <div class="card">
                <h3>Create post</h3>
                <div class="form-group field">
                    <label>Title:</label>
                    <input type="text" @bind="title" @bind:event="oninput"/>
                </div>
                <div class="form-group field">
                    <label>Body:</label>
                    <input type="text" @bind="body" @bind:event="oninput"/>
                    @if (!string.IsNullOrEmpty(resultMsg))
                    {
                        <label style="color: @color">@resultMsg</label>
                    }
                </div>
                <div class="button-row">
                    <button @onclick="CreateAsync" disabled="@(string.IsNullOrEmpty(title))" class="acceptbtn">Create</button>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="card-beauty text-white">You need to be logged in to create a post.</div>
    </NotAuthorized>
</AuthorizeView>


@code {
    private string username = "Kamilos";//Todo change later
    private string title = "";
    private string body = "";
    private string resultMsg = "";
    private string color = "";
    
    private async Task CreateAsync()
    {
        resultMsg = "";

        try
        {
            await postService.CreateAsync(new PostCreationDto(title, body, username));
            resultMsg = "Post successfully created.";
            color = "green";
            title = "";
            body = "";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}